{"version":3,"file":"main.es.js","sources":["../src/utils/getTag.ts","../src/utils/isSymbol.ts","../src/utils/toKey.ts","../src/utils/isKey.ts","../src/utils/memoize.ts","../src/utils/memoizeCapped.ts","../src/utils/stringToPath.ts","../src/utils/getValueFromPath.ts","../src/utils/applyContext.ts","../src/utils/decomposeString.ts","../src/utils/braceExpand.ts","../src/Matcher.ts","../src/utils/mersenneTwister.ts","../src/utils/generateUUID.ts","../src/conditionOperators/boolean/bool.ts","../src/conditionOperators/date/convertDate.ts","../src/conditionOperators/date/dateEquals.ts","../src/conditionOperators/date/dateGreaterThan.ts","../src/conditionOperators/date/dateGreaterThanEquals.ts","../src/conditionOperators/date/dateLessThan.ts","../src/conditionOperators/date/dateLessThanEquals.ts","../src/conditionOperators/date/dateNotEquals.ts","../src/conditionOperators/numeric/numericEquals.ts","../src/conditionOperators/numeric/numericGreaterThan.ts","../src/conditionOperators/numeric/numericGreaterThanEquals.ts","../src/conditionOperators/numeric/numericLessThan.ts","../src/conditionOperators/numeric/numericLessThanEquals.ts","../src/conditionOperators/numeric/numericNotEquals.ts","../src/conditionOperators/string/stringEquals.ts","../src/conditionOperators/string/stringEqualsIgnoreCase.ts","../src/conditionOperators/string/stringLike.ts","../src/conditionOperators/string/stringLikeIfExists.ts","../src/conditionOperators/string/stringNotEquals.ts","../src/conditionOperators/string/stringNotEqualsIgnoreCase.ts","../src/conditionOperators/index.ts","../src/Statement.ts","../src/ActionBasedStatement.ts","../src/IdentityBasedStatement.ts","../src/ResourceBasedStatement.ts","../src/Policy.ts","../src/ActionBasedPolicy.ts","../src/IdentityBasedPolicy.ts","../src/ResourceBasedPolicy.ts"],"sourcesContent":["/**\n * Gets the `toStringTag` of `value`.\n *\n * @since 3.1.0\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n * @example\n * ```javascript\n * getTag(1)\n * // => '[object Number]'\n *\n * getTag(null)\n * // => '[object Null]'\n * ```\n */\nexport function getTag(value: unknown): string {\n  return Object.prototype.toString.call(value);\n}\n","import { getTag } from './getTag';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @since 3.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n * ```javascript\n * isSymbol(Symbol())\n * // => true\n *\n * isSymbol('abc')\n * // => false\n * ```\n */\nexport function isSymbol(value?: unknown): value is symbol {\n  const type = typeof value;\n  return (\n    type === 'symbol' ||\n    (type === 'object' && value !== null && getTag(value) === '[object Symbol]')\n  );\n}\n","import { isSymbol } from './isSymbol';\n\n/** Used as references for various `Number` constants. */\nconst INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @since 3.1.0\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n * @example\n *\n * toKey(Symbol.iterator)\n * // => true\n *\n * toKey('abc')\n * // => false\n */\nexport function toKey(value: unknown): string | symbol {\n  if (typeof value === 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  return value === 0 && 1 / value === -INFINITY ? '-0' : `${value}`;\n}\n","import { isSymbol } from './isSymbol';\n\n/** Used to match property names within property paths. */\nconst reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nconst reIsPlainProp = /^\\w*$/; //matches any word character (alphanumeric and underscore)\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @since 3.1.0\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n * @example\n * ```javascript\n * isKey(1)\n * // => true\n *\n * isKey('example[test]')\n * // => false\n *\n * isKey('a.b')\n * // => false\n *\n * const obj = {\n *   '[a]': 5,\n *   'b.c': true\n * };\n *\n * isKey('[a]', obj)\n * // => true\n *\n * isKey('b.c', obj)\n * // => true\n * ```\n */\nexport function isKey<T extends object>(value: unknown, object?: T): boolean {\n  const type = typeof value;\n  if (\n    type === 'number' ||\n    type === 'boolean' ||\n    value === null ||\n    value === undefined ||\n    isSymbol(value)\n  ) {\n    return true;\n  }\n  if (typeof value === 'string') {\n    return (\n      reIsPlainProp.test(value) ||\n      !reIsDeepProp.test(value) ||\n      (object !== null && value in Object(object))\n    );\n  }\n  return false;\n}\n","import { MemoizeInterface } from '../types';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * @since 3.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n * ```javascript\n * const object = { 'a': 1, 'b': 2 }\n * const other = { 'c': 3, 'd': 4 }\n *\n * const values = memoize(values)\n * values(object)\n * // => [1, 2]\n *\n * values(other)\n * // => [3, 4]\n *\n * object.a = 2\n * values(object)\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b'])\n * values(object)\n * // => ['a', 'b']\n * ```\n */\nexport function memoize(\n  func: (...args: unknown[]) => any,\n  resolver?: (...args: unknown[]) => any\n): MemoizeInterface {\n  const memoized = function (\n    this: (...args: unknown[]) => any,\n    ...args: unknown[]\n  ): MemoizeInterface {\n    const key = resolver ? resolver.apply(this, args) : args[0];\n    const cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    const result = func.apply(this, args);\n    cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new Map();\n  return memoized;\n}\n\n/*const memoize = (fn: Function): Function => {\n  const cache = {};\n  return (...args): any => {\n    const stringifiedArgs = JSON.stringify(args);\n    const result = (cache[stringifiedArgs] =\n      typeof cache[stringifiedArgs] === 'undefined'\n        ? fn(...args)\n        : cache[stringifiedArgs]);\n    return result;\n  };\n};*/\n","import { memoize } from './memoize';\nimport { MemoizeInterface } from '../types';\n\n/** Used as the maximum memoize cache size. */\nexport const MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @since 3.1.0\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nexport function memoizeCapped(\n  func: (...args: any) => unknown\n): MemoizeInterface {\n  const result = memoize(func, (key: unknown) => {\n    const { cache } = result;\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  return result;\n}\n","import { memoizeCapped } from './memoizeCapped';\n\nconst charCodeOfDot = '.'.charCodeAt(0);\nconst reEscapeChar = /\\\\(\\\\)?/g;\nconst rePropName = RegExp(\n  // Match anything that isn't a dot or bracket.\n  '[^.[\\\\]]+' +\n    '|' +\n    // Or match property names within brackets.\n    '\\\\[(?:' +\n    // Match a non-string expression.\n    '([^\"\\'][^[]*)' +\n    '|' +\n    // Or match strings (supports escaping characters).\n    '([\"\\'])((?:(?!\\\\x02)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\x02' +\n    ')\\\\]' +\n    '|' +\n    // Or match \"\" as the space between consecutive dots or empty brackets.\n    '(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))',\n  'g'\n);\n\n/**\n * Converts `string` to a property path array.\n *\n * @since 3.1.0\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nexport const stringToPath = memoizeCapped((string: string) => {\n  const result = [];\n  if (string.charCodeAt(0) === charCodeOfDot) {\n    result.push('');\n  }\n  string.replace(\n    rePropName,\n    (\n      match: string,\n      expression: string,\n      quote: string,\n      subString: string\n    ): string => {\n      let key = match;\n      if (quote) {\n        key = subString.replace(reEscapeChar, '$1');\n      } else if (expression) {\n        key = expression.trim();\n      }\n      result.push(key);\n      return '';\n    }\n  );\n  return result;\n});\n","import { toKey } from './toKey';\nimport { isKey } from './isKey';\nimport { stringToPath } from './stringToPath';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nexport function castPath<T, U extends object>(\n  value: unknown,\n  object: U\n): Array<T> {\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(value);\n}\n\n/**\n * The base implementation of `get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nexport function baseGet<T, U extends object>(\n  object: U,\n  path: Array<T> | string\n): any {\n  const newPath = castPath(path, object);\n\n  let index = 0;\n  const length = newPath.length;\n\n  let value: any = object;\n  while (value instanceof Object && index < length) {\n    value = value[toKey(newPath[index++])];\n  }\n\n  return index && index === length ? value : undefined;\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @since 3.1.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * const object = { 'a': [{ 'b': { 'c': 3 } }] }\n *\n * getValueFromPath(object, 'a[0].b.c')\n * // => 3\n *\n * getValueFromPath(object, ['a', '0', 'b', 'c'])\n * // => 3\n *\n * getValueFromPath(object, 'a.b.c', 'default')\n * // => 'default'\n */\nexport function getValueFromPath<T, U extends object>(\n  object: U,\n  path: Array<T> | string,\n  defaultValue?: unknown\n): any {\n  const result = object === null ? undefined : baseGet(object, path);\n\n  return result === undefined ? defaultValue : result;\n}\n","import { getValueFromPath } from './getValueFromPath';\n\nconst reDelimiters = /\\${([^}]*)}/g;\nconst trim = / +(?= )|^\\s+|\\s+$/g;\n\nconst specialTrim = (str: string): string => str.replace(trim, '');\n\n/**\n * Apply the context value in a string.\n *\n * @param {string} str Pattern string, containing context path.\n * @param {object} context Object to get values from path.\n * @returns {string} Returns a string with embedded context values.\n * @example\n * ```javascript\n * const context = {\n *   user: { id: 456, bestFriends: [123, 532, 987] }\n * };\n * applyContext('secrets:${user.id}:*', context)\n * // => 'secrets:456:*'\n *\n * applyContext('secrets:${user.bestFriends}:*', context)\n * // => 'secrets:{123,532,987}:*'\n *\n * applyContext('secrets:${company.address}:account', context)\n * // => 'secrets:undefined:account'\n * ```\n */\nexport function applyContext<T extends object>(\n  str: string,\n  context?: T\n): string {\n  if (!context) return str;\n\n  return specialTrim(\n    str.replace(reDelimiters, (_, path: string) => {\n      const value = getValueFromPath(context, path);\n      if (Array.isArray(value)) return `{${value}}`;\n      if (value instanceof Object) return 'undefined';\n\n      return String(value);\n    })\n  );\n}\n","import { DecomposeString } from '../types';\n\n/**\n * Get index range where separators are found.\n *\n * @private\n * @since 3.1.1\n * @param {string} initialSeparator First string to be found.\n * @param {string} finalSeparator Second string to be found.\n * @param {string} str String to be decomposed.\n * @returns {number[]} Returns the beginning and final index for those matches.\n * @example\n * ```javascript\n * getIndexRange('first', 'Second', 'firstAndSecond')\n * // => [0, 8]\n *\n * getIndexRange('First', 'Second', '++FirstAndSecond**')\n * // => [2, 10]\n * ```\n */\nfunction getIndexRange(\n  initialSeparator: string,\n  finalSeparator: string,\n  str: string\n): number[] {\n  const beginningIndex = str.indexOf(initialSeparator);\n  const finalIndex = str.indexOf(finalSeparator, beginningIndex + 1);\n\n  if (beginningIndex >= 0 && finalIndex > 0) {\n    return [beginningIndex, finalIndex];\n  }\n\n  return [-1, -1];\n}\n\n/**\n * Object returned by decomposeString function\n *\n * @typedef {Object} DecomposedString\n * @property {number} start Beginning index for first separator match\n * @property {number} end Final index for second separator match\n * @property {string} pre Substring before first separator\n * @property {string} body Substring between separators\n * @property {string} post Substring after second separator\n */\n\n/**\n * Decompose string in pre, body and post strings by using separators.\n *\n * @private\n * @since 3.1.1\n * @param {string} initialSeparator First string to be found.\n * @param {string} finalSeparator Second string to be found.\n * @param {string} str String to be decomposed.\n * @returns {DecomposedString} Returns a decompose string.\n * @example\n * ```javascript\n * decomposeString('first', 'Second', 'firstAndSecond')\n * // => { start: 0, end: 8, pre: '', body: 'And', post: '' }\n *\n * decomposeString('First', 'Second', '++FirstAndSecond**')\n * // => { start: 2, end: 10, pre: '++', body: 'And', post: '**' }\n * ```\n */\nexport function decomposeString(\n  initialSeparator: string,\n  finalSeparator: string,\n  str: string\n): DecomposeString {\n  const [beginningIndex, finalIndex] = getIndexRange(\n    initialSeparator,\n    finalSeparator,\n    str\n  );\n\n  return {\n    start: beginningIndex,\n    end: finalIndex,\n    pre: beginningIndex >= 0 ? str.slice(0, beginningIndex) : '',\n    body:\n      beginningIndex >= 0\n        ? str.slice(beginningIndex + initialSeparator.length, finalIndex)\n        : '',\n    post:\n      beginningIndex >= 0 ? str.slice(finalIndex + finalSeparator.length) : ''\n  };\n}\n","import { decomposeString } from './decomposeString';\n\n/**\n * Generate an array of string depending on {} blocks.\n *\n * @param {string} pattern Pattern string that can contains {} blocks.\n * @returns {string[]} Returns an array of string with all the combinations.\n * @example\n * ```javascript\n * braceExpand('${13}')\n * // => ['{13}']\n *\n * braceExpand('a{b,f,m}p')\n * // => ['abp','afp','amp']\n *\n * braceExpand('-v{,,}')\n * // => ['-v','-v','-v']\n * ```\n */\nconst braceExpand = (pattern: string): string[] => {\n  if (!pattern.match(/{.*}/)) {\n    return [pattern];\n  }\n\n  return expand(pattern, true);\n};\n\nconst expand = (str: string, isTop?: boolean): string[] => {\n  const expansions = [] as string[];\n  const balance = decomposeString('{', '}', str);\n  if (balance.start < 0) return [str];\n\n  const parts = balance.body.split(',');\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  const pre = balance.pre;\n  const postParts = balance.post.length ? expand(balance.post, false) : [''];\n\n  if (/\\$$/.test(balance.pre)) {\n    postParts.forEach((postPart) => {\n      const expansion = `${balance.pre.slice(0, -1)}{${\n        balance.body\n      }}${postPart}`;\n      expansions.push(expansion);\n    });\n  } else {\n    parts.forEach((part: string) => {\n      postParts.forEach((postPart) => {\n        const expansion = pre + part + postPart;\n        if (!isTop || expansion) expansions.push(expansion);\n      });\n    });\n  }\n\n  return expansions;\n};\n\nexport { braceExpand };\n","import { braceExpand } from './utils/braceExpand';\n\nexport class Matcher {\n  private readonly pattern: string;\n  private readonly maxLength: number;\n  private readonly set: (string | RegExp)[];\n  private readonly empty: boolean;\n\n  constructor(pattern: string, maxLength = 1024 * 64) {\n    this.set = [];\n    this.pattern = pattern.trim();\n    this.maxLength = maxLength;\n    this.empty = !this.pattern ? true : false;\n\n    const set = braceExpand(pattern);\n    this.set = set.map((val) => this.parse(val));\n    this.set = this.set.filter((s) => {\n      return Boolean(s);\n    });\n  }\n\n  match(this: Matcher, str: string): boolean {\n    if (this.empty) return str === '';\n\n    return this.set.some((pattern) => this.matchOne(str, pattern));\n  }\n\n  private parse(pattern: string): string | RegExp {\n    if (pattern.length > this.maxLength) {\n      throw new TypeError('Pattern is too long');\n    }\n    let regExp;\n    let hasSpecialCharacter = false;\n    if (pattern === '') return '';\n\n    const re = pattern.replace(/\\*/g, () => {\n      hasSpecialCharacter = true;\n      return '.+?';\n    });\n\n    // skip the regexp for non-* patterns\n    // unescape anything in it, though, so that it'll be\n    // an exact match.\n    if (!hasSpecialCharacter) {\n      return pattern.replace(/\\\\(.)/g, '$1');\n    }\n\n    try {\n      regExp = new RegExp('^' + re + '$');\n    } catch (error) {\n      // If it was an invalid regular expression, then it can't match\n      // anything.\n      return new RegExp('$.');\n    }\n\n    return regExp;\n  }\n\n  private matchOne(str: string, pattern: string | RegExp): boolean {\n    if (typeof pattern === 'string') {\n      return str === pattern;\n    }\n\n    return Boolean(str.match(pattern));\n  }\n}\n","/*\n  https://github.com/banksean wrapped Makoto Matsumoto and Takuji Nishimura's code in a namespace\n  so it's better encapsulated. Now you can have multiple random number generators\n  and they won't stomp all over each other's state.\n  If you want to use this as a substitute for Math.random(), use the random()\n  method like so:\n  var m = new MersenneTwister();\n  var randomNumber = m.random();\n  You can also call the other genrand_{foo}() methods on the instance.\n  If you want to use a specific seed in order to get a repeatable random\n  sequence, pass an integer into the constructor:\n  var m = new MersenneTwister(123);\n  and that will always produce the same random sequence.\n  Sean McCullough (banksean@gmail.com)\n*/\n\n/*\n   A C-program for MT19937, with initialization improved 2002/1/26.\n   Coded by Takuji Nishimura and Makoto Matsumoto.\n   Before using, initialize the state by using init_seed(seed)\n   or init_by_array(init_key, key_length).\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n   All rights reserved.\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n     1. Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n     2. Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n     3. The names of its contributors may not be used to endorse or promote\n        products derived from this software without specific prior written\n        permission.\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   Any feedback is very welcome.\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n*/\n\nexport class MersenneTwister {\n  private readonly N: number;\n  private readonly M: number;\n  private readonly MATRIX_A: number;\n  private readonly UPPER_MASK: number;\n  private readonly LOWER_MASK: number;\n  private readonly mt: number[];\n  private mti: number;\n\n  constructor(seed?: number | number[]) {\n    /* Period parameters */\n    this.N = 624;\n    this.M = 397;\n    this.MATRIX_A = 0x9908b0df; /* constant vector a */\n    this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n    this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n    this.mt = new Array(this.N); /* the array for the state vector */\n    this.mti = this.N + 1; /* mti==N+1 means mt[N] is not initialized */\n\n    if (Array.isArray(seed)) {\n      if (seed.length > 0) this.initByArray(seed, seed.length);\n    } else {\n      if (seed === undefined) {\n        this.initSeed(new Date().getTime());\n      } else {\n        this.initSeed(seed);\n      }\n    }\n  }\n\n  /* initializes mt[N] with a seed */\n  /* origin name init_genrand */\n  initSeed(seed: number): void {\n    this.mt[0] = seed >>> 0;\n    for (this.mti = 1; this.mti < this.N; this.mti++) {\n      const s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n      this.mt[this.mti] =\n        ((((s & 0xffff0000) >>> 16) * 1812433253) << 16) +\n        (s & 0x0000ffff) * 1812433253 +\n        this.mti;\n      /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n      /* In the previous versions, MSBs of the seed affect   */\n      /* only MSBs of the array mt[].                        */\n      /* 2002/01/09 modified by Makoto Matsumoto             */\n      this.mt[this.mti] >>>= 0;\n      /* for >32 bit machines */\n    }\n  }\n\n  /* initialize by an array with array-length */\n  /* init_key is the array for initializing keys */\n  /* key_length is its length */\n  /* slight change for C++, 2004/2/26 */\n  initByArray(initKey: number[], keyLength: number): void {\n    this.initSeed(19650218);\n    let i = 1;\n    let j = 0;\n    let k = this.N > keyLength ? this.N : keyLength;\n    for (; k; k--) {\n      const s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n      this.mt[i] =\n        (this.mt[i] ^\n          (((((s & 0xffff0000) >>> 16) * 1664525) << 16) +\n            (s & 0x0000ffff) * 1664525)) +\n        initKey[j] +\n        j; /* non linear */\n      this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n      i++;\n      j++;\n      if (i >= this.N) {\n        this.mt[0] = this.mt[this.N - 1];\n        i = 1;\n      }\n      if (j >= keyLength) j = 0;\n    }\n    for (k = this.N - 1; k; k--) {\n      const s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n      this.mt[i] =\n        (this.mt[i] ^\n          (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) +\n            (s & 0x0000ffff) * 1566083941)) -\n        i; /* non linear */\n      this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n      i++;\n      if (i >= this.N) {\n        this.mt[0] = this.mt[this.N - 1];\n        i = 1;\n      }\n    }\n\n    this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n  }\n\n  /* generates a random number on [0,0xffffffff]-interval */\n  /* origin name genrand_int32 */\n  randomInt32(): number {\n    let y;\n    const mag01 = [0x0, this.MATRIX_A];\n    /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n    if (this.mti >= this.N) {\n      /* generate N words at one time */\n      let kk;\n\n      if (this.mti === this.N + 1)\n        /* if init_seed() has not been called, */\n        this.initSeed(5489); /* a default initial seed is used */\n\n      for (kk = 0; kk < this.N - this.M; kk++) {\n        y =\n          (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK);\n        this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n      }\n      for (; kk < this.N - 1; kk++) {\n        y =\n          (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK);\n        this.mt[kk] =\n          this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n      }\n      y =\n        (this.mt[this.N - 1] & this.UPPER_MASK) |\n        (this.mt[0] & this.LOWER_MASK);\n      this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n      this.mti = 0;\n    }\n\n    y = this.mt[this.mti++];\n\n    /* Tempering */\n    y ^= y >>> 11;\n    y ^= (y << 7) & 0x9d2c5680;\n    y ^= (y << 15) & 0xefc60000;\n    y ^= y >>> 18;\n\n    return y >>> 0;\n  }\n\n  /* generates a random number on [0,0x7fffffff]-interval */\n  /* origin name genrand_int31 */\n  randomInt31(): number {\n    return this.randomInt32() >>> 1;\n  }\n\n  /* generates a random number on [0,1]-real-interval */\n  /* origin name genrand_real1 */\n  randomReal1(): number {\n    return this.randomInt32() * (1.0 / 4294967295.0);\n    /* divided by 2^32-1 */\n  }\n\n  /* generates a random number on [0,1)-real-interval */\n  /* origin name genrand_real2 */\n  randomReal2(): number {\n    return this.randomInt32() * (1.0 / 4294967296.0);\n    /* divided by 2^32 */\n  }\n\n  /* generates a random number on (0,1)-real-interval */\n  /* origin name genrand_real3 */\n  randomReal3(): number {\n    return (this.randomInt32() + 0.5) * (1.0 / 4294967296.0);\n    /* divided by 2^32 */\n  }\n\n  /* generates a random number on [0,1) with 53-bit resolution*/\n  /* origin name genrand_res53 */\n  randomRes53(): number {\n    const a = this.randomInt32() >>> 5;\n    const b = this.randomInt32() >>> 6;\n    return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n  }\n}\n\n/* These real versions are due to Isaku Wada, 2002/01/09 added */\n","import { MersenneTwister } from './mersenneTwister';\n\nconst replacePlaceholders = (mersenne: MersenneTwister) => (\n  placeholder: string\n): string => {\n  const random = Math.floor(mersenne.randomReal2() * 16);\n\n  const value = placeholder === 'x' ? random : (random & 0x3) | 0x8;\n  return value.toString(16);\n};\n\n/**\n * Generate a uuid.\n *\n * @private\n * @since 3.5.0\n * @returns {string} Returns the generated uuid.\n * @example\n * ```javascript\n * generateUUID()\n * // => 49e71c40-9b21-4371-9699-2def33f62e66\n *\n * generateUUID()\n * // => da94f128-4247-48e3-bc73-d0cae46b5093\n * ```\n */\nexport function generateUUID(): string {\n  const mersenne = new MersenneTwister();\n  const RFC4122_TEMPLATE = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n\n  return RFC4122_TEMPLATE.replace(/[xy]/g, replacePlaceholders(mersenne));\n}\n","/**\n * Boolean matching.\n *\n * @since 4.7.0\n * @category Boolean\n * @param {number} data The value to be compared.\n * @param {number} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is equal to `expected value`.\n * @example\n * ```javascript\n * bool(true, true)\n * // => true\n *\n * bool(true, false)\n * // => false\n * ```\n */\nexport function bool(data: boolean, expected: boolean): boolean {\n  return (\n    data === expected\n  );\n}\n","export type DateType = Date | string;\n\nexport const convertDate = (date: DateType): number=>{\n  if(date instanceof Date){\n    return date.getTime();\n  }\n\n  return Date.parse(date);\n}","import {DateType, convertDate} from './convertDate';\n\n/**\n * Exact date matching.\n *\n * @since 4.8.0\n * @category Date\n * @param {Date} data The value to be compared.\n * @param {Date} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is equal to `expected value`.\n * @example\n * ```javascript\n * dateEquals('December 15, 1994 03:24:00', 'December 15, 1994 03:24:00')\n * // => true\n *\n * dateEquals('December 15, 2000 03:24:00', 'December 10, 2001 03:24:00')\n * // => false\n * ```\n */\nexport function dateEquals(data: DateType, expected: DateType): boolean {\n  const convertedData = convertDate(data);\n  const convertedExpectation = convertDate(expected);\n  return (\n    convertedData === convertedExpectation\n  );\n}\n","import { DateType, convertDate } from './convertDate';\n\n/**\n * Matching after a specific date and time\n *\n * @since 4.11.0\n * @category Date\n * @param {Date} data The value to be compared.\n * @param {Date} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is after than `expected value`.\n * @example\n * ```javascript\n * dateGreaterThan('December 17, 1994 03:24:00', 'December 16, 1994 03:24:00')\n * // => true\n *\n * dateGreaterThan('December 15, 2000 03:24:00', 'December 15, 2000 03:24:00')\n * // => false\n * ```\n */\nexport function dateGreaterThan(data: DateType, expected: DateType): boolean {\n  const convertedData = convertDate(data);\n  const convertedExpectation = convertDate(expected);\n  return convertedData > convertedExpectation;\n}\n","import { DateType, convertDate } from './convertDate';\n\n/**\n * Matching at or after a specific date and time\n *\n * @since 4.11.0\n * @category Date\n * @param {Date} data The value to be compared.\n * @param {Date} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is after than or equals `expected value`.\n * @example\n * ```javascript\n * dateGreaterThanEquals('December 17, 1994 03:24:00', 'December 16, 1994 03:24:00')\n * // => true\n *\n * dateGreaterThanEquals('December 15, 2000 03:24:00', 'December 15, 2000 03:25:00')\n * // => false\n * ```\n */\nexport function dateGreaterThanEquals(\n  data: DateType,\n  expected: DateType\n): boolean {\n  const convertedData = convertDate(data);\n  const convertedExpectation = convertDate(expected);\n  return convertedData >= convertedExpectation;\n}\n","import {DateType, convertDate} from './convertDate';\n\n/**\n * Matching before a specific date and time\n *\n * @since 4.10.0\n * @category Date\n * @param {Date} data The value to be compared.\n * @param {Date} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is before than `expected value`.\n * @example\n * ```javascript\n * dateLessThan('December 15, 1994 03:24:00', 'December 16, 1994 03:24:00')\n * // => true\n *\n * dateLessThan('December 15, 2000 03:24:00', 'December 15, 2000 03:24:00')\n * // => false\n * ```\n */\nexport function dateLessThan(data: DateType, expected: DateType): boolean {\n  const convertedData = convertDate(data);\n  const convertedExpectation = convertDate(expected);\n  return (\n    convertedData < convertedExpectation\n  );\n}\n","import {DateType, convertDate} from './convertDate';\n\n/**\n * Matching at or before a specific date and time\n *\n * @since 4.10.0\n * @category Date\n * @param {Date} data The value to be compared.\n * @param {Date} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is equal or before than `expected value`.\n * @example\n * ```javascript\n * dateLessThanEquals('December 15, 1994 03:24:00', 'December 15, 1994 03:24:00')\n * // => true\n *\n * dateLessThanEquals('December 15, 2000 03:24:00', 'December 15, 2000 03:24:00')\n * // => false\n * ```\n */\nexport function dateLessThanEquals(data: DateType, expected: DateType): boolean {\n  const convertedData = convertDate(data);\n  const convertedExpectation = convertDate(expected);\n  return (\n    convertedData <= convertedExpectation\n  );\n}\n","import {DateType, convertDate} from './convertDate';\n\n/**\n * Negated date matching.\n *\n * @since 4.9.0\n * @category Date\n * @param {Date} data The value to be compared.\n * @param {Date} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is not equal to `expected value`.\n * @example\n * ```javascript\n * dateNotEquals('December 15, 1994 03:24:00', 'December 16, 1995 03:24:00')\n * // => true\n *\n * dateNotEquals('December 15, 2000 03:24:00', 'December 15, 2000 03:24:00')\n * // => false\n * ```\n */\nexport function dateNotEquals(data: DateType, expected: DateType): boolean {\n  const convertedData = convertDate(data);\n  const convertedExpectation = convertDate(expected);\n  return (\n    convertedData !== convertedExpectation\n  );\n}\n","/**\n * Exact numeric matching.\n *\n * @since 4.6.0\n * @category Numeric\n * @param {number} data The value to be compared.\n * @param {number} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is equal to `expected value`.\n * @example\n * ```javascript\n * numericEquals(5, 5)\n * // => true\n *\n * numericEquals(2, 4)\n * // => false\n * ```\n */\nexport function numericEquals(data: number, expected: number): boolean {\n  return (\n    data === expected\n  );\n}\n","/**\n * Numeric greater than matching.\n *\n * @since 4.6.0\n * @category Numeric\n * @param {number} data The value to be compared.\n * @param {number} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is greater than `expected value`.\n * @example\n * ```javascript\n * numericGreaterThan(6, 5)\n * // => true\n *\n * numericGreaterThan(4, 8)\n * // => false\n * ```\n */\nexport function numericGreaterThan(data: number, expected: number): boolean {\n  return (\n    data > expected\n  );\n}\n","/**\n * Numeric greater than or equals matching.\n *\n * @since 4.6.0\n * @category Numeric\n * @param {number} data The value to be compared.\n * @param {number} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is greater than or equals `expected value`.\n * @example\n * ```javascript\n * numericGreaterThanEquals(5, 5)\n * // => true\n *\n * numericGreaterThanEquals(4, 8)\n * // => false\n * ```\n */\nexport function numericGreaterThanEquals(data: number, expected: number): boolean {\n  return (\n    data >= expected\n  );\n}\n","/**\n * Numeric less than matching.\n *\n * @since 4.6.0\n * @category Numeric\n * @param {number} data The value to be compared.\n * @param {number} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is less than `expected value`.\n * @example\n * ```javascript\n * numericLessThan(5, 6)\n * // => true\n *\n * numericLessThan(8, 4)\n * // => false\n * ```\n */\nexport function numericLessThan(data: number, expected: number): boolean {\n  return (\n    data < expected\n  );\n}\n","/**\n * Numeric less than or equals matching.\n *\n * @since 4.6.0\n * @category Numeric\n * @param {number} data The value to be compared.\n * @param {number} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is less than or equals `expected value`.\n * @example\n * ```javascript\n * numericLessThanEquals(5, 5)\n * // => true\n *\n * numericLessThanEquals(8, 4)\n * // => false\n * ```\n */\nexport function numericLessThanEquals(data: number, expected: number): boolean {\n  return (\n    data <= expected\n  );\n}\n","/**\n * Negated numeric matching.\n *\n * @since 4.6.0\n * @category Numeric\n * @param {number} data The value to be compared.\n * @param {number} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is not equal to `expected value`.\n * @example\n * ```javascript\n * numericNotEquals(2, 4)\n * // => true\n *\n * numericNotEquals(5, 5)\n * // => false\n * ```\n */\nexport function numericNotEquals(data: number, expected: number): boolean {\n  return (\n    data !== expected\n  );\n}\n","/**\n * Exact string matching, case sensitive.\n *\n * @since 4.3.0\n * @category String\n * @param {string} data The value to be compared.\n * @param {string} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is equal to `expected value`.\n * @example\n * ```javascript\n * stringEquals('hi', 'hi')\n * // => true\n *\n * stringEquals('hi', 'no')\n * // => false\n * ```\n */\nexport function stringEquals(data: string, expected: string): boolean {\n  return (\n    data === expected\n  );\n}\n","/**\n * Exact string matching, ignoring case.\n *\n * @since 4.4.0\n * @category String\n * @param {string} data The value to be compared.\n * @param {string} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is equal to `expected value`.\n * @example\n * ```javascript\n * stringEqualsIgnoreCase('hi', 'Hi')\n * // => true\n *\n * stringEqualsIgnoreCase('hi', 'no')\n * // => false\n * ```\n */\nexport function stringEqualsIgnoreCase(data: string, expected: string): boolean {\n  return (\n    data.toLowerCase() === expected.toLowerCase()\n  );\n}\n","import {Matcher} from '../../Matcher';\n\n/**\n * Case-sensitive matching. The values can include a multi-character match wildcard (*) anywhere in the string.\n *\n * @since 4.5.0\n * @category String\n * @param {string} data The value to be compared.\n * @param {string} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is equal like `expected value`.\n * @example\n * ```javascript\n * stringLike('newHouse', 'new*')\n * // => true\n *\n * stringLike('House', 'new*')\n * // => false\n * ```\n */\nexport function stringLike(data: string, expected: string): boolean {\n  return (\n    new Matcher(data).match(expected)\n  );\n}\n","import {stringLike} from './stringLike';\n\n/**\n * Case-sensitive matching if exist. The values can include a multi-character match wildcard (*) anywhere in the string.\n *\n * @since 4.12.0\n * @category String\n * @param {string} data The value to be compared.\n * @param {string} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is equal like `expected value` or if it does not exist.\n * @example\n * ```javascript\n * stringLikeIfExists(undefined, 'new*')\n * // => true\n *\n * stringLikeIfExists('House', 'new*')\n * // => false\n * ```\n */\nexport function stringLikeIfExists(data: string | undefined, expected: string): boolean {\n  return data?(\n    stringLike(data,expected)\n  ):true;\n}\n","/**\n * Negated string matching.\n *\n * @since 4.4.0\n * @category String\n * @param {string} data The value to be compared.\n * @param {string} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is not equal to `expected value`.\n * @example\n * ```javascript\n * stringNotEquals('hi', 'no')\n * // => true\n * \n * stringNotEquals('hi', 'hi')\n * // => false\n * ```\n */\nexport function stringNotEquals(data: string, expected: string): boolean {\n  return (\n    data !== expected\n  );\n}\n","/**\n * Negated string matching, ignoring case.\n *\n * @since 4.4.0\n * @category String\n * @param {string} data The value to be compared.\n * @param {string} expected The expected value.\n * @returns {boolean} Returns `true` if `value` is not equal to `expected value`.\n * @example\n * ```javascript\n * stringNotEqualsIgnoreCase('hi', 'no')\n * // => true\n * \n * stringNotEqualsIgnoreCase('hi', 'Hi')\n * // => false\n * ```\n */\nexport function stringNotEqualsIgnoreCase(data: string, expected: string): boolean {\n  return (\n    data.toLowerCase() !== expected.toLowerCase()\n  );\n}\n","import { bool } from './boolean/bool';\nimport { dateEquals } from './date/dateEquals';\nimport { dateGreaterThan } from './date/dateGreaterThan';\nimport { dateGreaterThanEquals } from './date/dateGreaterThanEquals';\nimport { dateLessThan } from './date/dateLessThan';\nimport { dateLessThanEquals } from './date/dateLessThanEquals';\nimport { dateNotEquals } from './date/dateNotEquals';\nimport { numericEquals } from './numeric/numericEquals';\nimport { numericGreaterThan } from './numeric/numericGreaterThan';\nimport { numericGreaterThanEquals } from './numeric/numericGreaterThanEquals';\nimport { numericLessThan } from './numeric/numericLessThan';\nimport { numericLessThanEquals } from './numeric/numericLessThanEquals';\nimport { numericNotEquals } from './numeric/numericNotEquals';\nimport { stringEquals } from './string/stringEquals';\nimport { stringEqualsIgnoreCase } from './string/stringEqualsIgnoreCase';\nimport { stringLike } from './string/stringLike';\nimport { stringLikeIfExists } from './string/stringLikeIfExists';\nimport { stringNotEquals } from './string/stringNotEquals';\nimport { stringNotEqualsIgnoreCase } from './string/stringNotEqualsIgnoreCase';\n\nexport const operators: Record<string, unknown> = {\n  bool,\n  dateEquals,\n  dateGreaterThan,\n  dateGreaterThanEquals,\n  dateLessThan,\n  dateLessThanEquals,\n  dateNotEquals,\n  numericEquals,\n  numericGreaterThan,\n  numericGreaterThanEquals,\n  numericLessThan,\n  numericLessThanEquals,\n  numericNotEquals,\n  stringEquals,\n  stringEqualsIgnoreCase,\n  stringLike,\n  stringLikeIfExists,\n  stringNotEquals,\n  stringNotEqualsIgnoreCase\n};\n","import {\n  EffectBlock,\n  ConditionBlock,\n  StatementInterface,\n  MatchConditionInterface,\n  MatchConditionResolverInterface\n} from './types';\nimport { getValueFromPath } from './utils/getValueFromPath';\nimport { generateUUID } from './utils/generateUUID';\nimport {operators} from './conditionOperators';\n\nabstract class Statement<T extends object> {\n  protected sid: string;\n  protected readonly condition?: ConditionBlock;\n  effect: EffectBlock;\n\n  constructor({ sid, effect = 'allow', condition }: StatementInterface) {\n    if (!sid) {\n      this.sid = generateUUID();\n    } else {\n      this.sid = sid;\n    }\n    this.effect = effect;\n    this.condition = condition;\n  }\n\n  matchConditions(\n    this: Statement<T>,\n    { context, conditionResolver }: MatchConditionInterface<T>\n  ): boolean {\n    const { condition: conditions } = this;\n\n    if(conditions && context){\n      return Object.keys(conditions).every((condition) =>\n        Object.keys(conditions[condition]).every((path) => {\n          const conditionValues = conditions[condition][path];\n          if (conditionValues instanceof Array) {\n            return conditionValues.some((value) =>\n              this.evaluateCondition({\n                context,\n                conditionResolver,\n                condition,\n                path,\n                value\n              })\n            );\n          }\n\n          return this.evaluateCondition({\n            context,\n            conditionResolver,\n            condition,\n            path,\n            value: conditionValues\n          });\n        })\n      )\n    }\n\n    return true;\n  }\n\n  private evaluateCondition(\n    this: Statement<T>,\n    { context, conditionResolver={}, path, value, condition }: MatchConditionResolverInterface<T>\n  ): boolean {\n\n    const currentResolver= conditionResolver[condition] || operators[condition]\n\n    if(currentResolver){\n      return currentResolver(\n        getValueFromPath(context, path),\n        value\n      )\n    }\n    return false;\n  }\n}\n\nexport { Statement };\n","import { ActionBasedType, MatchActionBasedInterface } from './types';\nimport { Matcher } from './Matcher';\nimport { Statement } from './Statement';\nimport { applyContext } from './utils/applyContext';\n\nclass ActionBased<T extends object> extends Statement<T> {\n  private action?: string[];\n  private notAction?: string[];\n  private statement: ActionBasedType;\n\n  constructor(action: ActionBasedType) {\n    super(action);\n    this.checkAndAssignActions(action);\n    this.statement = { ...action, sid: this.sid };\n  }\n\n  getStatement(this: ActionBased<T>): ActionBasedType {\n    return this.statement;\n  }\n\n  matches(\n    this: ActionBased<T>,\n    { action, context, conditionResolver }: MatchActionBasedInterface<T>\n  ): boolean {\n    return (\n      this.matchActions(action, context) &&\n      this.matchNotActions(action, context) &&\n      this.matchConditions({ context, conditionResolver })\n    );\n  }\n\n  private checkAndAssignActions(action: ActionBasedType): void {\n    const hasAction = 'action' in action;\n    const hasNotAction = 'notAction' in action;\n    if (hasAction && hasNotAction) {\n      throw new TypeError(\n        'ActionBased statement should have an action or a notAction attribute, no both'\n      );\n    }\n    if ('action' in action) {\n      this.action =\n        typeof action.action === 'string' ? [action.action] : action.action;\n    } else {\n      this.notAction =\n        typeof action.notAction === 'string'\n          ? [action.notAction]\n          : action.notAction;\n    }\n  }\n\n  private matchActions(action: string, context?: T): boolean {\n    return this.action\n      ? this.action.some((a) =>\n          new Matcher(applyContext(a, context)).match(action)\n        )\n      : true;\n  }\n\n  private matchNotActions(action: string, context?: T): boolean {\n    return this.notAction\n      ? !this.notAction.some((a) =>\n          new Matcher(applyContext(a, context)).match(action)\n        )\n      : true;\n  }\n}\n\nexport { ActionBased };\n","import { IdentityBasedType, MatchIdentityBasedInterface } from './types';\nimport { Matcher } from './Matcher';\nimport { Statement } from './Statement';\nimport { applyContext } from './utils/applyContext';\n\nclass IdentityBased<T extends object> extends Statement<T> {\n  private resource?: string[];\n  private action?: string[];\n  private notResource?: string[];\n  private notAction?: string[];\n  private statement: IdentityBasedType;\n\n  constructor(identity: IdentityBasedType) {\n    super(identity);\n    this.checkAndAssignActions(identity);\n    this.checkAndAssignResources(identity);\n    this.statement = { ...identity, sid: this.sid };\n  }\n\n  getStatement(this: IdentityBased<T>): IdentityBasedType {\n    return this.statement;\n  }\n\n  matches(\n    this: IdentityBased<T>,\n    {\n      action,\n      resource,\n      context,\n      conditionResolver\n    }: MatchIdentityBasedInterface<T>\n  ): boolean {\n    return (\n      this.matchActions(action, context) &&\n      this.matchNotActions(action, context) &&\n      this.matchResources(resource, context) &&\n      this.matchNotResources(resource, context) &&\n      this.matchConditions({ context, conditionResolver })\n    );\n  }\n\n  private checkAndAssignActions(identity: IdentityBasedType): void {\n    const hasAction = 'action' in identity;\n    const hasNotAction = 'notAction' in identity;\n    if (hasAction && hasNotAction) {\n      throw new TypeError(\n        'IdentityBased statement should have an action or a notAction attribute, no both'\n      );\n    }\n    if ('action' in identity) {\n      this.action =\n        typeof identity.action === 'string'\n          ? [identity.action]\n          : identity.action;\n    } else {\n      this.notAction =\n        typeof identity.notAction === 'string'\n          ? [identity.notAction]\n          : identity.notAction;\n    }\n  }\n\n  private checkAndAssignResources(identity: IdentityBasedType): void {\n    const hasResource = 'resource' in identity;\n    const hasNotResource = 'notResource' in identity;\n    if (hasResource && hasNotResource) {\n      throw new TypeError(\n        'IdentityBased statement should have a resource or a notResource attribute, no both'\n      );\n    }\n    if ('resource' in identity) {\n      this.resource =\n        typeof identity.resource === 'string'\n          ? [identity.resource]\n          : identity.resource;\n    } else {\n      this.notResource =\n        typeof identity.notResource === 'string'\n          ? [identity.notResource]\n          : identity.notResource;\n    }\n  }\n\n  private matchActions(action: string, context?: T): boolean {\n    return this.action\n      ? this.action.some((a) =>\n          new Matcher(applyContext(a, context)).match(action)\n        )\n      : true;\n  }\n\n  private matchNotActions(action: string, context?: T): boolean {\n    return this.notAction\n      ? !this.notAction.some((a) =>\n          new Matcher(applyContext(a, context)).match(action)\n        )\n      : true;\n  }\n\n  private matchResources(resource: string, context?: T): boolean {\n    return this.resource\n      ? this.resource.some((a) =>\n          new Matcher(applyContext(a, context)).match(resource)\n        )\n      : true;\n  }\n\n  private matchNotResources(resource: string, context?: T): boolean {\n    return this.notResource\n      ? !this.notResource.some((a) =>\n          new Matcher(applyContext(a, context)).match(resource)\n        )\n      : true;\n  }\n}\n\nexport { IdentityBased };\n","import {\n  PrincipalMap,\n  MatchResourceBasedInterface,\n  ResourceBasedType\n} from './types';\nimport { Matcher } from './Matcher';\nimport { Statement } from './Statement';\nimport { applyContext } from './utils/applyContext';\n\nclass ResourceBased<T extends object> extends Statement<T> {\n  private principal?: PrincipalMap | string[];\n  private resource?: string[];\n  private action?: string[];\n  private notPrincipal?: PrincipalMap | string[];\n  private notResource?: string[];\n  private notAction?: string[];\n  private statement: ResourceBasedType;\n  private hasPrincipals: boolean;\n  private hasResources: boolean;\n\n  constructor(identity: ResourceBasedType) {\n    super(identity);\n    this.hasPrincipals = false;\n    this.hasResources = false;\n    this.checkAndAssignActions(identity);\n    this.checkAndAssignPrincipals(identity);\n    this.checkAndAssignResources(identity);\n    this.statement = { ...identity, sid: this.sid };\n  }\n\n  getStatement(this: ResourceBased<T>): ResourceBasedType {\n    return this.statement;\n  }\n\n  matches(\n    this: ResourceBased<T>,\n    {\n      principal,\n      action,\n      resource,\n      principalType,\n      context,\n      conditionResolver\n    }: MatchResourceBasedInterface<T>\n  ): boolean {\n    return (\n      this.matchPrincipalAndNotPrincipal(principal, principalType, context) &&\n      this.matchActions(action, context) &&\n      this.matchNotActions(action, context) &&\n      this.matchResourceAndNotResource(resource, context) &&\n      this.matchConditions({ context, conditionResolver })\n    );\n  }\n\n  /*valueComing principal noPrincipal\n  true        false     false       false\n  true        true      false       true or false\n  true        false     true        true or false\n  false       false     false       true\n  false       true      false       false\n  false       false     true        false*/\n  private matchPrincipalAndNotPrincipal(\n    principal?: string,\n    principalType?: string,\n    context?: T\n  ): boolean {\n    if (principal) {\n      if (this.hasPrincipals)\n        return (\n          this.matchPrincipals(principal, principalType, context) &&\n          this.matchNotPrincipals(principal, principalType, context)\n        );\n      return false;\n    }\n    if (this.hasPrincipals) return false;\n    return true;\n  }\n\n  /*valueComing resource noResource\n  true        false     false       false\n  true        true      false       true or false\n  true        false     true        true or false\n  false       false     false       true\n  false       true      false       false\n  false       false     true        false*/\n  private matchResourceAndNotResource(resource?: string, context?: T): boolean {\n    if (resource) {\n      if (this.hasResources)\n        return (\n          this.matchResources(resource, context) &&\n          this.matchNotResources(resource, context)\n        );\n      return false;\n    }\n    if (this.hasResources) return false;\n    return true;\n  }\n\n  private checkAndAssignActions(identity: ResourceBasedType): void {\n    const hasAction = 'action' in identity;\n    const hasNotAction = 'notAction' in identity;\n    if (hasAction && hasNotAction) {\n      throw new TypeError(\n        'ResourceBased statement should have an action or a notAction attribute, no both'\n      );\n    }\n    if ('action' in identity) {\n      this.action =\n        typeof identity.action === 'string'\n          ? [identity.action]\n          : identity.action;\n    } else {\n      this.notAction =\n        typeof identity.notAction === 'string'\n          ? [identity.notAction]\n          : identity.notAction;\n    }\n  }\n\n  private checkAndAssignPrincipals(identity: ResourceBasedType): void {\n    const hasPrincipal = 'principal' in identity;\n    const hasNotPrincipal = 'notPrincipal' in identity;\n    if (hasPrincipal && hasNotPrincipal) {\n      throw new TypeError(\n        'ResourceBased statement could have a principal or a notPrincipal attribute, no both'\n      );\n    }\n    if ('principal' in identity) {\n      this.principal =\n        typeof identity.principal === 'string'\n          ? [identity.principal]\n          : identity.principal;\n      this.hasPrincipals = true;\n    } else if ('notPrincipal' in identity) {\n      this.notPrincipal =\n        typeof identity.notPrincipal === 'string'\n          ? [identity.notPrincipal]\n          : identity.notPrincipal;\n      this.hasPrincipals = true;\n    }\n  }\n\n  private checkAndAssignResources(identity: ResourceBasedType): void {\n    const hasResource = 'resource' in identity;\n    const hasNotResource = 'notResource' in identity;\n    if (hasResource && hasNotResource) {\n      throw new TypeError(\n        'ResourceBased statement could have a resource or a notResource attribute, no both'\n      );\n    }\n    if ('resource' in identity) {\n      this.resource =\n        typeof identity.resource === 'string'\n          ? [identity.resource]\n          : identity.resource;\n      this.hasResources = true;\n    } else if ('notResource' in identity) {\n      this.notResource =\n        typeof identity.notResource === 'string'\n          ? [identity.notResource]\n          : identity.notResource;\n      this.hasResources = true;\n    }\n  }\n\n  private matchPrincipals(\n    principal: string,\n    principalType?: string,\n    context?: T\n  ): boolean {\n    if (this.principal) {\n      if (this.principal instanceof Array) {\n        return principalType\n          ? false\n          : this.principal.some((a) =>\n              new Matcher(applyContext(a, context)).match(principal)\n            );\n      } else {\n        if (principalType) {\n          const principalValues = this.principal[principalType];\n          if (principalValues instanceof Array) {\n            return principalValues.some((a) =>\n              new Matcher(applyContext(a, context)).match(principal)\n            );\n          } else if (principalValues) {\n            return new Matcher(applyContext(principalValues, context)).match(\n              principal\n            );\n          }\n          return false;\n        }\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private matchNotPrincipals(\n    principal: string,\n    principalType?: string,\n    context?: T\n  ): boolean {\n    if (this.notPrincipal) {\n      if (this.notPrincipal instanceof Array) {\n        return principalType\n          ? true\n          : !this.notPrincipal.some((a) =>\n              new Matcher(applyContext(a, context)).match(principal)\n            );\n      } else {\n        if (principalType) {\n          const principalValues = this.notPrincipal[principalType];\n          if (principalValues instanceof Array) {\n            return !principalValues.some((a) =>\n              new Matcher(applyContext(a, context)).match(principal)\n            );\n          } else if (principalValues) {\n            return !new Matcher(applyContext(principalValues, context)).match(\n              principal\n            );\n          }\n          return true;\n        }\n        return true;\n      }\n    }\n    return true;\n  }\n\n  private matchActions(action: string, context?: T): boolean {\n    return this.action\n      ? this.action.some((a) =>\n          new Matcher(applyContext(a, context)).match(action)\n        )\n      : true;\n  }\n\n  private matchNotActions(action: string, context?: T): boolean {\n    return this.notAction\n      ? !this.notAction.some((a) =>\n          new Matcher(applyContext(a, context)).match(action)\n        )\n      : true;\n  }\n\n  private matchResources(resource: string, context?: T): boolean {\n    return this.resource\n      ? this.resource.some((a) =>\n          new Matcher(applyContext(a, context)).match(resource)\n        )\n      : true;\n  }\n\n  private matchNotResources(resource: string, context?: T): boolean {\n    return this.notResource\n      ? !this.notResource.some((a) =>\n          new Matcher(applyContext(a, context)).match(resource)\n        )\n      : true;\n  }\n}\n\nexport { ResourceBased };\n","import { MatchConditionInterface, ConditionResolver } from './types';\n\nabstract class Policy<T extends object, U> {\n  protected context?: T;\n  protected conditionResolver?: ConditionResolver;\n\n  constructor({ context, conditionResolver }: MatchConditionInterface<T>) {\n    this.context = context;\n    this.conditionResolver = conditionResolver;\n  }\n\n  setContext(this: Policy<T, U>, context: T): void {\n    this.context = context;\n  }\n\n  getContext(this: Policy<T, U>): T | undefined {\n    return this.context;\n  }\n\n  setConditionResolver(\n    this: Policy<T, U>,\n    conditionResolver: ConditionResolver\n  ): void {\n    this.conditionResolver = conditionResolver;\n  }\n\n  getConditionResolver(this: Policy<T, U>): ConditionResolver | undefined {\n    return this.conditionResolver;\n  }\n\n  abstract getStatements(this: Policy<T, U>): U[];\n}\n\nexport { Policy };\n","import {\n  ActionBasedType,\n  ConditionResolver,\n  EvaluateActionBasedInterface,\n  ProxyOptions\n} from './types';\nimport { ActionBased } from './ActionBasedStatement';\nimport { Policy } from './Policy';\n\nexport interface ActionBasedPolicyInterface<T extends object> {\n  statements: ActionBasedType[];\n  conditionResolver?: ConditionResolver;\n  context?: T;\n}\n\nexport class ActionBasedPolicy<T extends object> extends Policy<\n  T,\n  ActionBasedType\n> {\n  private denyStatements: ActionBased<T>[];\n  private allowStatements: ActionBased<T>[];\n  private statements: ActionBasedType[];\n\n  constructor({\n    statements,\n    conditionResolver,\n    context\n  }: ActionBasedPolicyInterface<T>) {\n    super({ context, conditionResolver });\n    const statementInstances = statements.map(\n      (statement) => new ActionBased(statement)\n    );\n    this.allowStatements = statementInstances.filter(\n      (s) => s.effect === 'allow'\n    );\n    this.denyStatements = statementInstances.filter((s) => s.effect === 'deny');\n    this.statements = statementInstances.map((statement) =>\n      statement.getStatement()\n    );\n  }\n\n  addStatement(this: ActionBasedPolicy<T>, statement: ActionBasedType): void {\n    const statementInstance = new ActionBased(statement);\n    if (statementInstance.effect === 'allow') {\n      this.allowStatements.push(statementInstance);\n    } else {\n      this.denyStatements.push(statementInstance);\n    }\n    this.statements.push(statementInstance.getStatement());\n  }\n\n  getStatements(this: ActionBasedPolicy<T>): ActionBasedType[] {\n    return this.statements;\n  }\n\n  evaluate(\n    this: ActionBasedPolicy<T>,\n    { action, context }: EvaluateActionBasedInterface<T>\n  ): boolean {\n    const args = { action, context };\n    return !this.cannot(args) && this.can(args);\n  }\n\n  can(\n    this: ActionBasedPolicy<T>,\n    { action, context }: EvaluateActionBasedInterface<T>\n  ): boolean {\n    return this.allowStatements.some((s) =>\n      s.matches({\n        action,\n        context: context || this.context,\n        conditionResolver: this.conditionResolver\n      })\n    );\n  }\n\n  whyCan(\n    this: ActionBasedPolicy<T>,\n    { action, context }: EvaluateActionBasedInterface<T>\n  ): ActionBasedType[] {\n    return this.allowStatements.reduce((statements, currentStatement) => {\n      const matches = currentStatement.matches({\n        action,\n        context: context || this.context,\n        conditionResolver: this.conditionResolver\n      });\n      if (matches) {\n        return [...statements, currentStatement.getStatement()];\n      }\n      return statements;\n    }, [] as ActionBasedType[]);\n  }\n\n  cannot(\n    this: ActionBasedPolicy<T>,\n    { action, context }: EvaluateActionBasedInterface<T>\n  ): boolean {\n    return this.denyStatements.some((s) =>\n      s.matches({\n        action,\n        context: context || this.context,\n        conditionResolver: this.conditionResolver\n      })\n    );\n  }\n\n  whyCannot(\n    this: ActionBasedPolicy<T>,\n    { action, context }: EvaluateActionBasedInterface<T>\n  ): ActionBasedType[] {\n    return this.denyStatements.reduce((statements, currentStatement) => {\n      const matches = currentStatement.matches({\n        action,\n        context: context || this.context,\n        conditionResolver: this.conditionResolver\n      });\n      if (matches) {\n        return [...statements, currentStatement.getStatement()];\n      }\n      return statements;\n    }, [] as ActionBasedType[]);\n  }\n\n  generateProxy<U extends object>(\n    this: ActionBasedPolicy<T>,\n    obj: U,\n    options: ProxyOptions = {}\n  ): U {\n    const { get = {}, set = {} } = options;\n    const { allow: allowGet = true, propertyMap: propertyMapGet = {} } = get;\n    const { allow: allowSet = true, propertyMap: propertyMapSet = {} } = set;\n    const handler = {\n      ...(allowGet\n        ? {\n            get: (target: U, prop: string | symbol): any => {\n              const property = Reflect.has(propertyMapGet, prop)\n                ? Reflect.get(propertyMapGet, prop)\n                : prop;\n              if (typeof prop === 'string') {\n                if (this.evaluate({ action: property })) {\n                  return Reflect.get(target, prop);\n                } else {\n                  throw new Error(`Unauthorize to get ${prop} property`);\n                }\n              } else {\n                return Reflect.get(target, prop);\n              }\n            }\n          }\n        : {}),\n      ...(allowSet\n        ? {\n            set: (target: U, prop: string | symbol, value: any): boolean => {\n              const property = Reflect.has(propertyMapSet, prop)\n                ? Reflect.get(propertyMapSet, prop)\n                : prop;\n              if (typeof prop === 'string') {\n                if (this.evaluate({ action: property })) {\n                  return Reflect.set(target, prop, value);\n                } else {\n                  throw new Error(`Unauthorize to set ${prop} property`);\n                }\n              } else {\n                return false;\n              }\n            }\n          }\n        : {})\n    };\n\n    return new Proxy(obj, handler);\n  }\n}\n","import {\n  ConditionResolver,\n  EvaluateIdentityBasedInterface,\n  IdentityBasedType\n} from './types';\nimport { IdentityBased } from './IdentityBasedStatement';\nimport { Policy } from './Policy';\n\ninterface IdentityBasedPolicyInterface<T extends object> {\n  statements: IdentityBasedType[];\n  conditionResolver?: ConditionResolver;\n  context?: T;\n}\n\nexport class IdentityBasedPolicy<T extends object> extends Policy<\n  T,\n  IdentityBasedType\n> {\n  private denyStatements: IdentityBased<T>[];\n  private allowStatements: IdentityBased<T>[];\n  private statements: IdentityBasedType[];\n\n  constructor({\n    statements,\n    conditionResolver,\n    context\n  }: IdentityBasedPolicyInterface<T>) {\n    super({ context, conditionResolver });\n    const statementInstances = statements.map(\n      (statement) => new IdentityBased(statement)\n    );\n    this.allowStatements = statementInstances.filter(\n      (s) => s.effect === 'allow'\n    );\n    this.denyStatements = statementInstances.filter((s) => s.effect === 'deny');\n    this.statements = statementInstances.map((statement) =>\n      statement.getStatement()\n    );\n  }\n\n  addStatement(\n    this: IdentityBasedPolicy<T>,\n    statement: IdentityBasedType\n  ): void {\n    const statementInstance = new IdentityBased(statement);\n    if (statementInstance.effect === 'allow') {\n      this.allowStatements.push(statementInstance);\n    } else {\n      this.denyStatements.push(statementInstance);\n    }\n    this.statements.push(statementInstance.getStatement());\n  }\n\n  getStatements(this: IdentityBasedPolicy<T>): IdentityBasedType[] {\n    return this.statements;\n  }\n\n  evaluate(\n    this: IdentityBasedPolicy<T>,\n    { action, resource, context }: EvaluateIdentityBasedInterface<T>\n  ): boolean {\n    const args = { action, resource, context };\n    return !this.cannot(args) && this.can(args);\n  }\n\n  can(\n    this: IdentityBasedPolicy<T>,\n    { action, resource, context }: EvaluateIdentityBasedInterface<T>\n  ): boolean {\n    return this.allowStatements.some((s) =>\n      s.matches({\n        action,\n        resource,\n        context: context || this.context,\n        conditionResolver: this.conditionResolver\n      })\n    );\n  }\n\n  whyCan(\n    this: IdentityBasedPolicy<T>,\n    { action, resource, context }: EvaluateIdentityBasedInterface<T>\n  ): IdentityBasedType[] {\n    return this.allowStatements.reduce((statements, currentStatement) =>{\n      const matches = currentStatement.matches({\n        action,\n        resource,\n        context: context || this.context,\n        conditionResolver: this.conditionResolver\n      });\n      if(matches){\n        return [...statements, currentStatement.getStatement()];\n      }\n      return statements;\n    }, [] as IdentityBasedType[]\n    );\n  }\n\n  cannot(\n    this: IdentityBasedPolicy<T>,\n    { action, resource, context }: EvaluateIdentityBasedInterface<T>\n  ): boolean {\n    return this.denyStatements.some((s) =>\n      s.matches({\n        action,\n        resource,\n        context: context || this.context,\n        conditionResolver: this.conditionResolver\n      })\n    );\n  }\n}\n","import {\n  ConditionResolver,\n  EvaluateResourceBasedInterface,\n  ResourceBasedType\n} from './types';\nimport { ResourceBased } from './ResourceBasedStatement';\nimport { Policy } from './Policy';\n\ninterface ResourceBasedPolicyInterface<T extends object> {\n  statements: ResourceBasedType[];\n  conditionResolver?: ConditionResolver;\n  context?: T;\n}\n\nexport class ResourceBasedPolicy<T extends object> extends Policy<\n  T,\n  ResourceBasedType\n> {\n  private denyStatements: ResourceBased<T>[];\n  private allowStatements: ResourceBased<T>[];\n  private statements: ResourceBasedType[];\n\n  constructor({\n    statements,\n    conditionResolver,\n    context\n  }: ResourceBasedPolicyInterface<T>) {\n    super({ context, conditionResolver });\n    const statementInstances = statements.map(\n      (statement) => new ResourceBased(statement)\n    );\n    this.allowStatements = statementInstances.filter(\n      (s) => s.effect === 'allow'\n    );\n    this.denyStatements = statementInstances.filter((s) => s.effect === 'deny');\n    this.statements = statementInstances.map((statement) =>\n      statement.getStatement()\n    );\n  }\n\n  addStatement(\n    this: ResourceBasedPolicy<T>,\n    statement: ResourceBasedType\n  ): void {\n    const statementInstance = new ResourceBased(statement);\n    if (statementInstance.effect === 'allow') {\n      this.allowStatements.push(statementInstance);\n    } else {\n      this.denyStatements.push(statementInstance);\n    }\n    this.statements.push(statementInstance.getStatement());\n  }\n\n  getStatements(this: ResourceBasedPolicy<T>): ResourceBasedType[] {\n    return this.statements;\n  }\n\n  evaluate(\n    this: ResourceBasedPolicy<T>,\n    {\n      principal,\n      action,\n      resource,\n      principalType,\n      context\n    }: EvaluateResourceBasedInterface<T>\n  ): boolean {\n    const args = { principal, action, resource, principalType, context };\n    return !this.cannot(args) && this.can(args);\n  }\n\n  can(\n    this: ResourceBasedPolicy<T>,\n    {\n      principal,\n      action,\n      resource,\n      principalType,\n      context\n    }: EvaluateResourceBasedInterface<T>\n  ): boolean {\n    return this.allowStatements.some((s) =>\n      s.matches({\n        principal,\n        action,\n        resource,\n        principalType,\n        context: context || this.context,\n        conditionResolver: this.conditionResolver\n      })\n    );\n  }\n\n  cannot(\n    this: ResourceBasedPolicy<T>,\n    {\n      principal,\n      action,\n      resource,\n      principalType,\n      context\n    }: EvaluateResourceBasedInterface<T>\n  ): boolean {\n    return this.denyStatements.some((s) =>\n      s.matches({\n        principal,\n        action,\n        resource,\n        principalType,\n        context: context || this.context,\n        conditionResolver: this.conditionResolver\n      })\n    );\n  }\n}\n"],"names":[],"mappings":"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"}